h1. Rack::RevisionInfo

h2. About

When you deploy application to a demo server QA (or client) wants to know which revision is currently running. Of course you can handle it in a old-school way putting some helper into your layout(s) which will obtain revision number exec'ing "svnversion" or sth like this. It works but it's not the most elegant solution. First, you are including code related only to demo/staging server in layouts/helpers (production server and your development box don't need it at all). Second, you probably do this for every new project. But all ruby web frameworks now run on Rack so better solution would be to move revision-displaying code from the app itself to the middleware. So here comes RevisionInfo.

h2. Installation

<pre><code>gem install rack-revision-info -s http://gemcutter.org</code></pre>

Enable in Merb:

<em>config/dependencies.rb</em>:

<pre><code>dependency "rack_revision_info"</code></pre>

<em>config/rack.rb</em> (before line with <code>run Merb::Rack::Application.new</code>):

<pre><code>use Rack::RevisionInfo, :path => Merb.root</code></pre>

Enable in Rails:

<em>config/environment.rb</em>:

<pre><code>config.gem "rack-revision-info", :source => "http://gemcutter.org"
config.middleware.use Rack::RevisionInfo, :path => RAILS_ROOT
</code></pre>

h2. Usage

Enabling this middleware for svn managed application you will get <em><code><!-- Revision 666 (2009-05-28 19:00:25 +00:00) --></code></em> appended to the end of resulting html. For git repository it will be <em><code><!-- Revision 31d0fa132584c7e9bf978443052b545c1aeca96b (2009-05-28 19:00:25 +00:00) --></code></em>. It's commented out so in order to see it look into page source.

However if you prefer to see revision number somewhere on the page you can specify CSS selector of page element and method of injection like this:

<pre><code>use Rack::RevisionInfo, :path => Merb.root, :inner_html => ".footer li.revision"</code></pre>

Here are available injection methods:

* <code>:append => "div.footer"</code> inserts revision info at the end of footer div content <pre><code><div class="footer"><img...> Revision 666 (2009-05-28 19:00:25 +00:00)</div></code></pre>
* <code>:prepend => "div.footer"</code> inserts revision info at the begining of footer div <pre><code><div class="footer">Revision 666 (2009-05-28 19:00:25 +00:00) <img...></div></code></pre>
* <code>:after => "div.footer"</code> inserts revision info after footer div <pre><code><div class="footer"><img...></div>Revision 666 (2009-05-28 19:00:25 +00:00)</code></pre>
* <code>:before => "div.footer"</code> inserts revision info before footer div <pre><code>Revision 666 (2009-05-28 19:00:25 +00:00)<div class="footer"><img...></div></code></pre>
* <code>:inner_html => "div.footer"</code> replaces footer div content with revision info <pre><code><div class="footer">Revision 666 (2009-05-28 19:00:25 +00:00)</div></code></pre>
* <code>:swap => "div.footer"</code> replaces whole footer div with revision info <pre><code>Revision 666 (2009-05-28 19:00:25 +00:00)</code></pre>

If you enable injection using one of above methods you need to have Nokogiri installed because HTML manipulation is done using it (if you don't use injection - only comment appending - you don't need Nokogiri). Specified CSS selector can be any selector supported by Nokogiri so you can freely use funky stuff like <code>#main ul.footer li:last</code>. You can also use XPath like <code>//div/ul/li</code>.

h2. Contact & Information

Marcin Kulik - http://sickill.net/

